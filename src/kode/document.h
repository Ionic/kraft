// This file is generated by kxml_compiler from document.xml.
// All changes you do to this file will be lost.
#ifndef KRAFTXML_DOCUMENT_H
#define KRAFTXML_DOCUMENT_H

#include <QString>
#include <QDomElement>
#include <QList>
#include <QtXml/QXmlStreamWriter>

namespace KraftXml {

class Footer
{
  public:
    void setPostText( const QString &v );
    QString postText() const;
    void setGoodbye( const QString &v );
    QString goodbye() const;
    /**
      Parse XML object from DOM element.
     */
    static Footer parseElement( const QDomElement &element, bool *ok );
    void writeElement( QXmlStreamWriter &xml );

  private:
    QString mPostText;
    QString mGoodbye;
};

class Taxsum
{
  public:
    typedef QList<Taxsum> List;

  public:
    void setType( const QString &v );
    QString type() const;
    void setValue( const QString &v );
    QString value() const;
    /**
      Parse XML object from DOM element.
     */
    static Taxsum parseElement( const QDomElement &element, bool *ok );
    void writeElement( QXmlStreamWriter &xml );

  private:
    QString mType;
    QString mValue;
};

class Sums
{
  public:
    void setNetto( const QString &v );
    QString netto() const;
    void addTaxsum( const Taxsum &v );
    void setTaxsumList( const Taxsum::List &v );
    Taxsum::List taxsumList() const;
    void setBrutto( const QString &v );
    QString brutto() const;
    /**
      Parse XML object from DOM element.
     */
    static Sums parseElement( const QDomElement &element, bool *ok );
    void writeElement( QXmlStreamWriter &xml );

  private:
    QString mNetto;
    Taxsum::List mTaxsumList;
    QString mBrutto;
};

class ItemAttribute
{
  public:
    typedef QList<ItemAttribute> List;

  public:
    void setName( const QString &v );
    QString name() const;
    void setValue( const QString &v );
    QString value() const;
    /**
      Parse XML object from DOM element.
     */
    static ItemAttribute parseElement( const QDomElement &element, bool *ok );
    void writeElement( QXmlStreamWriter &xml );

  private:
    QString mName;
    QString mValue;
};

class Item
{
  public:
    typedef QList<Item> List;

  public:
    void setNumber( int v );
    int number() const;
    void setText( const QString &v );
    QString text() const;
    void setAmount( const QString &v );
    QString amount() const;
    void setUnit( const QString &v );
    QString unit() const;
    void setTaxType( const QString &v );
    QString taxType() const;
    void setUnitprice( const QString &v );
    QString unitprice() const;
    void setItemprice( const QString &v );
    QString itemprice() const;
    void addItemAttribute( const ItemAttribute &v );
    void setItemAttributeList( const ItemAttribute::List &v );
    ItemAttribute::List itemAttributeList() const;
    /**
      Parse XML object from DOM element.
     */
    static Item parseElement( const QDomElement &element, bool *ok );
    void writeElement( QXmlStreamWriter &xml );

  private:
    int mNumber;
    QString mText;
    QString mAmount;
    QString mUnit;
    QString mTaxType;
    QString mUnitprice;
    QString mItemprice;
    ItemAttribute::List mItemAttributeList;
};

class Items
{
  public:
    void addItem( const Item &v );
    void setItemList( const Item::List &v );
    Item::List itemList() const;
    /**
      Parse XML object from DOM element.
     */
    static Items parseElement( const QDomElement &element, bool *ok );
    void writeElement( QXmlStreamWriter &xml );

  private:
    Item::List mItemList;
};

class Client
{
  public:
    void setAddress( const QString &v );
    QString address() const;
    void setClientId( const QString &v );
    QString clientId() const;
    /**
      Parse XML object from DOM element.
     */
    static Client parseElement( const QDomElement &element, bool *ok );
    void writeElement( QXmlStreamWriter &xml );

  private:
    QString mAddress;
    QString mClientId;
};

class Header
{
  public:
    void setDocType( const QString &v );
    QString docType() const;
    void setProject( const QString &v );
    QString project() const;
    void setWhiteboard( const QString &v );
    QString whiteboard() const;
    void setDate( const QString &v );
    QString date() const;
    void setIdent( const QString &v );
    QString ident() const;
    void setSalut( const QString &v );
    QString salut() const;
    void setPreText( const QString &v );
    QString preText() const;
    /**
      Parse XML object from DOM element.
     */
    static Header parseElement( const QDomElement &element, bool *ok );
    void writeElement( QXmlStreamWriter &xml );

  private:
    QString mDocType;
    QString mProject;
    QString mWhiteboard;
    QString mDate;
    QString mIdent;
    QString mSalut;
    QString mPreText;
};

class Tax
{
  public:
    typedef QList<Tax> List;

  public:
    void setType( const QString &v );
    QString type() const;
    void setValue( const QString &v );
    QString value() const;
    /**
      Parse XML object from DOM element.
     */
    static Tax parseElement( const QDomElement &element, bool *ok );
    void writeElement( QXmlStreamWriter &xml );

  private:
    QString mType;
    QString mValue;
};

class Meta
{
  public:
    void setDocDesc( const QString &v );
    QString docDesc() const;
    void setCurrency( const QString &v );
    QString currency() const;
    void setCountry( const QString &v );
    QString country() const;
    void setLanguage( const QString &v );
    QString language() const;
    void addTax( const Tax &v );
    void setTaxList( const Tax::List &v );
    Tax::List taxList() const;
    void setOwner( const QString &v );
    QString owner() const;
    /**
      Parse XML object from DOM element.
     */
    static Meta parseElement( const QDomElement &element, bool *ok );
    void writeElement( QXmlStreamWriter &xml );

  private:
    QString mDocDesc;
    QString mCurrency;
    QString mCountry;
    QString mLanguage;
    Tax::List mTaxList;
    QString mOwner;
};

class Kraftdocument
{
  public:
    void setVersion( int v );
    int version() const;
    void setLastModified( const QString &v );
    QString lastModified() const;
    void setMeta( const Meta &v );
    Meta meta() const;
    void setHeader( const Header &v );
    Header header() const;
    void setClient( const Client &v );
    Client client() const;
    void setItems( const Items &v );
    Items items() const;
    void setSums( const Sums &v );
    Sums sums() const;
    void setFooter( const Footer &v );
    Footer footer() const;
    /**
      Parse XML object from DOM element.
     */
    static Kraftdocument parseElement( const QDomElement &element, bool *ok );
    void writeElement( QXmlStreamWriter &xml );
    static Kraftdocument parseFile( const QString &filename, bool *ok );
    static Kraftdocument parseString( const QString &xml, bool *ok );
    bool writeFile( const QString &filename );

  private:
    int mVersion;
    QString mLastModified;
    Meta mMeta;
    Header mHeader;
    Client mClient;
    Items mItems;
    Sums mSums;
    Footer mFooter;
};

}

#endif
